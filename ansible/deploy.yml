---
- name: Deploy the application
  hosts: production
  remote_user: deploy

  vars_prompt:
    - name: sweetlakephp_version
      prompt: "What tag (or any valid git reference) do you wish to deploy?"
      private: no
      default: "master"

  vars_files:
    - group_vars/production.crypt

  tasks:
    - name: find correct folder names for deploy
      deploy: "path={{ sweetlakephp_root }}"

    - name: "clone repository"
      git: "repo={{ sweetlakephp_github_repo }} dest={{ sweetlakephp_source }} version={{ sweetlakephp_version }}"
    - name: copy files to new release folder
      command: "cp -r {{ sweetlakephp_source }} {{ deploy.new_release_path }}"
    - name: remove .git folder from new release folder
      file: "path={{ deploy.new_release_path }}/.git state=absent"

    - name: create parameters file
      template: "src=templates/parameters_prod.yml.j2 dest='{{ deploy.new_release_path }}/app/config/parameters_prod.yml' force=yes"

    - name: install composer packages
      command: "composer.phar install --no-ansi --no-dev --no-interaction --no-progress --optimize-autoloader --no-scripts --working-dir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"

    - name: build bootstrap
      command: "php vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/bin/build_bootstrap.php chdir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"

    - name: clear cache
      command: "app/console cache:clear chdir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"

    - name: assets install
      command: "app/console assets:install chdir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"

    - name: assetic dump
      command: "app/console assetic:dump chdir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"

    - name: perform migrations
      command: "app/console doctrine:migrations:migrate --no-interaction chdir={{ deploy.new_release_path }}"
      environment:
        SYMFONY_ENV: "{{ symfony_env }}"
      register: migrations_result
      changed_when: "'No migrations to execute' not in migrations_result.stdout"

    - name: remove app/sessions folder
      file: "path='{{ deploy.new_release_path }}/app/sessions' state=absent"

    - name: create symlink to shared/sessions folder
      file: "path='{{ deploy.new_release_path }}/app/sessions' src='{{ sweetlakephp_root }}/shared/sessions' state=link"

    - name: create symlink for current release
      file: src={{ deploy.new_release_path }} dest={{ deploy.current_path }} state=link

    - name: remove old releases
      deploy: "path={{ sweetlakephp_root }} state=cleanup"
